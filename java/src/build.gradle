/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'chiplua' at '6/30/14 4:29 PM' with Gradle 1.10
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.10/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile files('./a.jar')
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
    
}

// Redefine where Gradle should expect Java source files (*.java)
sourceSets {
    main {
	java.srcDirs = ['./src/']
    }
    compileSourceSetJava {
	java.srcDirs = ['./src/sourceSet/java/']
    }
    processSourceSetResources {
        resources.srcDirs = ['./src/sourceSet/resource']
    }
    sourceSetClasses {
	sourceSet.output.classesDir = file("./build/sourceSetClassTest")
    }
}

sourceSets.main.output.classesDir = file("./build/classexxxx")


task doMyShell(type: Exec) {
    executable 'sh'
    args '-c','bash test.sh $arg'
}
